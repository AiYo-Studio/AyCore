plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.+'
}

version = "1.4.0-BETA"
group = "com.aystudio.core"

allprojects {
    apply plugin: 'java'

    repositories {
        maven {
            name = "AyStudio-Repository"
            url = "https://repo.mc9y.com/snapshots"
        }
    }
}

subprojects {
    dependencies {
        compileOnly("org.projectlombok:lombok:1.18.24")
        annotationProcessor("org.projectlombok:lombok:1.18.24")
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }

processResources {
    setFilteringCharset("UTF-8")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

dependencies {
    implementation 'org.quartz-scheduler:quartz:2.3.2'
}

jar.enabled = false

shadowJar {
    archiveFileName = "AyCore-${version}.jar"

    from project(':folia').sourceSets.main.output
    from project(':bukkit').sourceSets.main.output
    from project(':forge').sourceSets.main.output

    relocate 'org.quartz', 'com.aystudio.core.libraries.quartz'
    relocate 'org.terracotta', 'com.aystudio.core.libraries.terracotta'
    relocate 'org.slf4j', 'com.aystudio.core.libraries.slf4j'

    dependencies {
        include(dependency("org.quartz-scheduler:quartz:2.3.2"))
        include(dependency("org.slf4j:slf4j-api:1.7.21"))
    }
}

tasks.shadowJar.dependsOn(
        project(':folia').tasks.jar,
        project(':bukkit').tasks.jar,
        project(':forge').tasks.jar
)

tasks.build.dependsOn(tasks.shadowJar)

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact("$buildDir/libs/${project.archivesBaseName}-${project.version}.jar")
        }
    }
    repositories {
        maven {
            name = "ayStudioRepository"
            url = "https://repo.mc9y.com/snapshots"
            credentials {
                username = findProperty("ayStudioRepositoryUsername")
                password = findProperty("ayStudioRepositoryPassword")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}